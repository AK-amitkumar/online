<?xml version="1.0" encoding="utf-8"?>
<openerp><data noupdate="1">

    <!-- =========== -->
    <!-- res.partner -->
    <!-- =========== -->

    <!-- Server Action to run set_bpk() for res.partner -->
    <record id="server_action_set_bpk" model="ir.actions.server" forcecreate="1">
        <field name="name">Force BPK-Request</field>
        <field name="model_id" ref="model_res_partner"/>
        <field name="state">code</field>
        <field name="code">
            <![CDATA[
            if context.get('active_model') == 'res.partner':

                # Find ids
                ids = []
                if context.get('active_domain'):
                    ids = self.search(cr, uid, context['active_domain'], context=context)
                elif context.get('active_ids'):
                    ids = context['active_ids']


                # Call button action action_set_bpk
                if ids:
                    assert len(ids) <= 2000, _("Max 2000 partner at once are allowed for manually started set_bpk()! Please use Schedule BPK-Request instead!")
                    self.action_set_bpk(cr, uid, ids, force_request=True, context=context)
            ]]>
        </field>
    </record>
    <!-- Add to more menu -->
    <record id="ir_server_action_set_bpk" model="ir.values" forcecreate="1">
        <field name="key2" eval="'client_action_multi'"/>
        <field name="model" eval="'res.partner'"/>
        <field name="name">Force BPK-Request</field>
        <field name="value" eval="'ir.actions.server,%d'%server_action_set_bpk"/>
    </record>


    <!-- ============================ -->
    <!-- BPK RECORDS: res.partner.bpk -->
    <!-- ============================ -->

    <!-- Server Action to run set_bpk() for res.partner.bpk -->
    <record id="server_action_set_bpk_for_bpkrecords" model="ir.actions.server" forcecreate="1">
        <field name="name">Force BPK Request</field>
        <field name="model_id" ref="model_res_partner_bpk"/>
        <field name="state">code</field>
        <field name="code">
            <![CDATA[
            if context.get('active_model') == 'res.partner.bpk':

                # Find res.partner.bpk ids
                ids = []
                if context.get('active_domain'):
                    ids = self.search(cr, uid, context['active_domain'], context=context)
                elif context.get('active_ids'):
                    ids = context['active_ids']


                # Find res.partner ids
                bpk_requests = self.browse(cr, uid, ids, context=context)
                partner_ids = [r.BPKRequestPartnerID.id for r in bpk_requests if r.BPKRequestPartnerID]

                # Run set_bpk() for found partner
                if partner_ids:
                    assert len(ids) <= 2000, _("Max 2000 partner at once are allowed for manually started set_bpk()! Please use Schedule BPK-Request instead!")
                    partner_obj = self.pool['res.partner']
                    partner_obj.action_set_bpk(cr, uid, partner_ids, force_request=True, context=context)
            ]]>
        </field>
    </record>
    <!-- Add to more menu -->
    <record id="ir_server_action_set_bpk_for_bpkrecords" model="ir.values" forcecreate="1">
        <field name="key2" eval="'client_action_multi'"/>
        <field name="model" eval="'res.partner.bpk'"/>
        <field name="name">Force BPK Request</field>
        <field name="value" eval="'ir.actions.server,%d'%server_action_set_bpk_for_bpkrecords"/>
    </record>


    <!-- ================= -->
    <!-- SCHEDULED ACTIONS -->
    <!-- ================= -->

    <!-- Scheduled fetch of BPK Records from ZMR for res.partner -->
    <record id="ir_cron_scheduled_set_bpk" model="ir.cron" forcecreate="1">
        <field name="name">BPK: Scheduled fetch of BPK Records every two minutes</field>
        <field name="priority" eval="2000" />
        <field name="active" eval="False"/>
        <field name="interval_number">2</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">-1</field>
        <field name="doall" eval="False"/>
        <field name="model">res.partner</field>
        <field name="function">scheduled_set_bpk</field>
        <field name="args" eval="'()'"/>
    </record>

    <!-- Scheduled Check to update partner bpk_state field
         HINT: Will also update state of BPK records (state field of res.partner.bpk)  -->
    <record id="ir_cron_scheduled_set_bpk_state" model="ir.cron" forcecreate="1">
        <field name="name">BPK: Check BPK State for all partners once a week</field>
        <field name="priority" eval="2100" />
        <field name="active" eval="False"/>
        <field name="interval_number">7</field>
        <field name="interval_type">days</field>
        <field name="numbercall">-1</field>
        <field name="nextcall" eval="(DateTime.today() + timedelta((4 - DateTime.today().weekday()) % 7 + 1)).strftime('%Y-%m-%d 01:30:00')" />
        <field name="doall" eval="False"/>
        <field name="model">res.partner</field>
        <field name="function">scheduled_set_bpk_state</field>
        <field name="args" eval="'()'"/>
    </record>

</data></openerp>
